{"ast":null,"code":"import { mapState } from \"vuex\";\nimport GeneralButton from \"@/components/GeneralButton.vue\";\nexport default {\n  components: {\n    GeneralButton\n  },\n  data() {\n    return {\n      openedModal: false,\n      editingProduct: false,\n      productIdCounter: 20,\n      // actualProducts: [...this.$store.state.produits],\n      form: {\n        id: null,\n        image: null,\n        titre: \"\",\n        description: \"\",\n        prix: null,\n        moq: null,\n        categorieId: null\n      }\n    };\n  },\n  computed: {\n    ...mapState([\"produits\", \"categoriesV\", \"actualProducts\"])\n  },\n  methods: {\n    convertImageToBase64(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = () => {\n        const base64String = reader.result;\n        this.form.image = base64String;\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n      }\n    },\n    remove(index) {\n      if (confirm(\"Etes-vous certain de vouloir supprimer ce produit ?\")) {\n        this.$store.commit(\"REMOVE_FROM_STOCK\", index);\n      }\n    },\n    add() {\n      this.$store.commit(\"ADD_NEW_PRODUCT\", this.form);\n      this.closeModal();\n    },\n    edit() {\n      const index = this.actualProducts.findIndex(product => product.id === this.form.id);\n      if (index !== -1) {\n        this.$store.commit(\"EDIT_PRODUCT\", {\n          index,\n          product: this.form\n        });\n      }\n      this.closeModal();\n    },\n    openModal(index) {\n      if (index !== undefined) {\n        this.editingProduct = true;\n        const product = this.actualProducts[index];\n        this.form = {\n          ...product\n        }; // populates form with product data, enters edit mode\n      } else {\n        this.editingProduct = false;\n        this.form = {\n          // Reset form for adding new product\n          // id: null,\n          image: null,\n          titre: \"\",\n          description: \"\",\n          prix: null,\n          moq: null,\n          categorieId: null\n        };\n      }\n      this.openedModal = true;\n    },\n    closeModal() {\n      this.openedModal = false;\n    }\n  },\n  // initializeActualProducts({ commit, state }) {\n  //   if (!state.actualProducts.length) {\n  //     commit('SET_ACTUAL_PRODUCTS', [...state.produits]);\n  //   }\n  // },\n  created() {\n    const storedActualProducts = JSON.parse(localStorage.getItem(\"actualProducts\"));\n    if (storedActualProducts) {\n      this.$store.commit(\"SET_ACTUAL_PRODUCTS\", storedActualProducts);\n    } else {\n      this.$store.commit(\"SET_ACTUAL_PRODUCTS\", [...this.$store.state.produits]);\n    }\n    let productIdCounter = localStorage.getItem(\"productIdCounter\");\n    if (productIdCounter) {\n      productIdCounter = JSON.parse(localStorage.getItem(\"productIdCounter\")).value;\n    } else {\n      localStorage.setItem(\"productIdCounter\", 20);\n    }\n    this.$store.dispatch('initializeCategories');\n    this.$store.dispatch(\"updateCategoriesV\");\n  }\n};","map":{"version":3,"names":["mapState","GeneralButton","components","data","openedModal","editingProduct","productIdCounter","form","id","image","titre","description","prix","moq","categorieId","computed","methods","convertImageToBase64","event","file","target","files","reader","FileReader","onload","base64String","result","readAsDataURL","remove","index","confirm","$store","commit","add","closeModal","edit","actualProducts","findIndex","product","openModal","undefined","created","storedActualProducts","JSON","parse","localStorage","getItem","state","produits","value","setItem","dispatch"],"sources":["/workspaces/Projet-WebWares/src/views/ManageProducts.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"product-inventory-container\">\r\n      <h1>Produits</h1>\r\n      <div class=\"top-button\">\r\n        <GeneralButton\r\n          label=\"Ajouter un produit\"\r\n          @generalEvent=\"openModal\"\r\n          class=\"admin-general\"\r\n        />\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Image</th>\r\n            <th>Référence</th>\r\n            <th>Titre</th>\r\n            <th>Prix</th>\r\n            <th>MOQ</th>\r\n            <th>Catégorie</th>\r\n            <th>Stock restant</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(actualProduct, index) in actualProducts\" :key=\"index\">\r\n            <td class=\"thumbnail-img\">\r\n              <img :src=\"actualProduct.image\" :alt=\"actualProduct.titre\" />\r\n            </td>\r\n            <td>{{ actualProduct.id }}</td>\r\n            <td>{{ actualProduct.titre }}</td>\r\n            <td>{{ actualProduct.prix }} €</td>\r\n            <td>{{ actualProduct.moq }}</td>\r\n            <td>{{ actualProduct.categorieId }}</td>\r\n            <td>{{ actualProduct.stock }}</td>\r\n            <td>\r\n              <button\r\n                class=\"action-btns modify\"\r\n                type=\"button\"\r\n                @click=\"openModal(index)\"\r\n              >\r\n                Modifier\r\n              </button>\r\n              <button\r\n                class=\"action-btns remove\"\r\n                type=\"button\"\r\n                @click=\"remove(index)\"\r\n              >\r\n                Supprimer\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div class=\"top-button\">\r\n        <GeneralButton\r\n          class=\"admin-general\"\r\n          label=\"Ajouter un produit\"\r\n          @generalEvent=\"openModal\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal -->\r\n    <div v-if=\"openedModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeModal\">X</span>\r\n        <h2>\r\n          {{ editingProduct ? \"Modifier un produit\" : \"Ajouter un produit\" }}\r\n        </h2>\r\n\r\n        <!-- Form fields -->\r\n        <form @submit.prevent=\"editingProduct ? edit() : add()\">\r\n          <label for=\"productName\">Nom du produit:</label>\r\n          <br />\r\n          <input type=\"text\" id=\"productName\" v-model=\"form.titre\" required />\r\n          <br />\r\n          <label for=\"productDescription\">Description:</label>\r\n          <br />\r\n          <textarea\r\n            id=\"productDescription\"\r\n            v-model=\"form.description\"\r\n            required\r\n          ></textarea>\r\n          <br />\r\n          <label for=\"productPrice\">Prix (€):</label>\r\n          <br />\r\n          <input\r\n            type=\"number\"\r\n            id=\"productPrice\"\r\n            v-model=\"form.prix\"\r\n            min=\"0.01\"\r\n            step=\".01\"\r\n            required\r\n          />\r\n          <br />\r\n          <label for=\"productMoq\">MOQ (Quantité minimale de commande):</label>\r\n          <br />\r\n          <input type=\"number\" id=\"productMoq\" min=\"0\" v-model=\"form.moq\" required />\r\n          <br />\r\n          <label for=\"productStock\">Stock :</label>\r\n          <br />\r\n          <input\r\n            type=\"number\"\r\n            id=\"productStock\"\r\n            v-model=\"form.stock\"\r\n            min=\"0\"\r\n            required\r\n          />\r\n          <br />\r\n          <label for=\"productCategory\">Catégorie:</label>\r\n          <br />\r\n          <select\r\n            name=\"category\"\r\n            id=\"category\"\r\n            v-model=\"form.categorieId\"\r\n            class=\"category-options\"\r\n          >\r\n            <option\r\n              v-for=\"category in categoriesV\"\r\n              :key=\"category.id\"\r\n              :value=\"category.id\"\r\n            >\r\n              {{ category.name }}\r\n            </option>\r\n            <!-- <option value=\"1\">1 - Mobilier d'intérieur</option>\r\n            <option value=\"2\">2 - Luminaires</option>\r\n            <option value=\"3\">3 - Tapis</option>\r\n            <option value=\"4\">4 - Objets de décorations</option> -->\r\n          </select>\r\n          <br />\r\n          <br />\r\n          <label for=\"productImage\">Image:</label>\r\n          <br />\r\n          <input\r\n            type=\"file\"\r\n            id=\"productImage\"\r\n            @change=\"convertImageToBase64\"\r\n            accept=\"image/*\"\r\n          />\r\n          <br />\r\n          <textarea\r\n            id=\"productImageBase64\"\r\n            v-model=\"form.image\"\r\n            hidden\r\n          ></textarea>\r\n\r\n          <br />\r\n          <button id=\"addButton\" type=\"submit\">\r\n            {{ editingProduct ? \"Modifier\" : \"Ajouter\" }}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nimport GeneralButton from \"@/components/GeneralButton.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    GeneralButton,\r\n  },\r\n  data() {\r\n    return {\r\n      openedModal: false,\r\n      editingProduct: false,\r\n      productIdCounter: 20,\r\n      // actualProducts: [...this.$store.state.produits],\r\n      form: {\r\n        id: null,\r\n        image: null,\r\n        titre: \"\",\r\n        description: \"\",\r\n        prix: null,\r\n        moq: null,\r\n        categorieId: null,\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState([\"produits\", \"categoriesV\", \"actualProducts\"]),\r\n  },\r\n  methods: {\r\n    convertImageToBase64(event) {\r\n      const file = event.target.files[0];\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        const base64String = reader.result;\r\n        this.form.image = base64String;\r\n      };\r\n\r\n      if (file) {\r\n        reader.readAsDataURL(file);\r\n      }\r\n    },\r\n\r\n    remove(index) {\r\n      if (confirm(\"Etes-vous certain de vouloir supprimer ce produit ?\")) {\r\n        this.$store.commit(\"REMOVE_FROM_STOCK\", index);\r\n      }\r\n    },\r\n    add() {\r\n      this.$store.commit(\"ADD_NEW_PRODUCT\", this.form);\r\n      this.closeModal();\r\n    },\r\n    edit() {\r\n      const index = this.actualProducts.findIndex(\r\n        (product) => product.id === this.form.id\r\n      );\r\n      if (index !== -1) {\r\n        this.$store.commit(\"EDIT_PRODUCT\", { index, product: this.form });\r\n      }\r\n      this.closeModal();\r\n    },\r\n    openModal(index) {\r\n      if (index !== undefined) {\r\n        this.editingProduct = true;\r\n        const product = this.actualProducts[index];\r\n        this.form = { ...product }; // populates form with product data, enters edit mode\r\n      } else {\r\n        this.editingProduct = false;\r\n        this.form = {\r\n          // Reset form for adding new product\r\n          // id: null,\r\n          image: null,\r\n          titre: \"\",\r\n          description: \"\",\r\n          prix: null,\r\n          moq: null,\r\n          categorieId: null,\r\n        };\r\n      }\r\n      this.openedModal = true;\r\n    },\r\n    closeModal() {\r\n      this.openedModal = false;\r\n    },\r\n  },\r\n  // initializeActualProducts({ commit, state }) {\r\n  //   if (!state.actualProducts.length) {\r\n  //     commit('SET_ACTUAL_PRODUCTS', [...state.produits]);\r\n  //   }\r\n  // },\r\n  created() {\r\n    const storedActualProducts = JSON.parse(\r\n      localStorage.getItem(\"actualProducts\")\r\n    );\r\n    if (storedActualProducts) {\r\n      this.$store.commit(\"SET_ACTUAL_PRODUCTS\", storedActualProducts);\r\n    } else {\r\n      this.$store.commit(\"SET_ACTUAL_PRODUCTS\", [\r\n        ...this.$store.state.produits,\r\n      ]);\r\n    }\r\n    let productIdCounter = localStorage.getItem(\"productIdCounter\");\r\n    if (productIdCounter) {\r\n      productIdCounter = JSON.parse(\r\n        localStorage.getItem(\"productIdCounter\")\r\n      ).value;\r\n    } else {\r\n      localStorage.setItem(\"productIdCounter\", 20);\r\n    }\r\n\r\n    this.$store.dispatch('initializeCategories');\r\n  \r\n    this.$store.dispatch(\"updateCategoriesV\");\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-general {\r\n  background: none;\r\n  color: #4caf50;\r\n  border: 1px solid #4caf50;\r\n}\r\n\r\n.top-button {\r\n  width: 20%;\r\n  margin: 10px auto;\r\n}\r\n\r\ntable {\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  font-size: 14px;\r\n}\r\n\r\ntd,\r\nth {\r\n  padding: 8px;\r\n  border-collapse: collapse;\r\n}\r\n\r\ntr > td {\r\n  border-bottom: 1px solid lightgrey;\r\n}\r\n\r\nth {\r\n  border-bottom: 1px solid lightgrey;\r\n}\r\n\r\ntbody tr:nth-child(even) {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\ntbody tr:nth-child(odd) {\r\n  background-color: #ffffff;\r\n}\r\n\r\n.thumbnail-img {\r\n  width: 50px;\r\n}\r\n\r\n.thumbnail-img img {\r\n  width: 40px;\r\n  height: auto;\r\n}\r\n\r\n.action-btns {\r\n  margin: 5px;\r\n  padding: 5px;\r\n}\r\n\r\n#addButton {\r\n  padding: 10px;\r\n  color: #4caf50;\r\n  border: 1px solid #4caf50;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-bottom: 5px;\r\n}\r\n\r\nbutton {\r\n  border-radius: 5px;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.modify {\r\n  border: 1px solid rgb(94, 25, 111);\r\n  color: rgb(94, 25, 111);\r\n}\r\n\r\n.remove {\r\n  border: 1px solid red;\r\n  color: red;\r\n}\r\n\r\n.addNewProduct {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.product-inventory-container {\r\n  padding: 10px;\r\n  margin-bottom: 40px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 70%;\r\n  border: 1px solid rgb(231, 67, 39);\r\n}\r\n\r\n#productInventory {\r\n  border-bottom: 1px solid lightgrey;\r\n}\r\n\r\n.modal {\r\n  display: flex;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\r\n  max-width: 600px;\r\n  width: 100%;\r\n  position: relative;\r\n}\r\n\r\n.modal-content input,\r\ntextarea,\r\nselect {\r\n  padding: 8px;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n#productDescription {\r\n  width: 80%;\r\n  height: 60px;\r\n}\r\n\r\n#category {\r\n  padding: 8px;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  color: #333;\r\n  z-index: 2;\r\n}\r\n\r\nh2 {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n#addImageBtn {\r\n  padding: 10px;\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n  font-size: 0.9em;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}