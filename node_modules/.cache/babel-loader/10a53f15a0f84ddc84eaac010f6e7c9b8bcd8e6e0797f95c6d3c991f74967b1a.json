{"ast":null,"code":"import { mapState } from \"vuex\";\nexport default {\n  data() {\n    return {\n      currentOrder: {\n        orderNumber: 0,\n        date: \"\",\n        titreProduits: [],\n        prixUnitaire: [],\n        prixArticles: [],\n        quantité: [],\n        coutTotal: 0,\n        entreprise: \"\",\n        adresse: \"\",\n        codePostal: \"\",\n        ville: \"\",\n        delivered: false\n      },\n      toggleCard: false,\n      ordersList: [],\n      groupe: \"GUEST\",\n      identite: \"guest\"\n    };\n  },\n  methods: {\n    reverseOrders() {\n      // Create a copy of the array using spread syntax\n      const reversedOrders = [...this.listOfOrders];\n      // Reverse the copied array\n      this.ordersList = reversedOrders.reverse();\n    },\n    confirmDelivery() {\n      if (confirm(\"Êtes-vous sûr de vouloir valider cette commande ?\")) {\n        this.currentOrder.delivered = true;\n        localStorage.setItem(\"orders\", JSON.stringify(this.listOfOrders));\n      }\n    },\n    showDetail(orderId) {\n      this.toggleCard = !this.toggleCard;\n      for (let order of this.listOfOrders) {\n        if (order.orderNumber === orderId) {\n          this.currentOrder = order;\n        }\n      }\n    }\n  },\n  computed: {\n    ...mapState([\"listOfOrders\"])\n  },\n  created() {\n    let orders = localStorage.getItem(\"orders\");\n    if (orders) {\n      this.$store.commit(\"SET_ORDERS\");\n    }\n    this.reverseOrders();\n    let identity = localStorage.getItem(\"myIdentity\");\n    if (identity) {\n      this.identite = JSON.parse(localStorage.getItem(\"myIdentity\")).raisonSociale;\n      this.$store.commit(\"CHANGE_IDENTITY\", this.identite);\n      this.groupe = JSON.parse(localStorage.getItem(\"myIdentity\")).role;\n      this.$store.commit(\"CHANGE_GROUP\", this.groupe);\n    }\n  }\n};","map":{"version":3,"names":["mapState","data","currentOrder","orderNumber","date","titreProduits","prixUnitaire","prixArticles","quantité","coutTotal","entreprise","adresse","codePostal","ville","delivered","toggleCard","ordersList","groupe","identite","methods","reverseOrders","reversedOrders","listOfOrders","reverse","confirmDelivery","confirm","localStorage","setItem","JSON","stringify","showDetail","orderId","order","computed","created","orders","getItem","$store","commit","identity","parse","raisonSociale","role"],"sources":["/workspaces/Projet-WebWares/src/views/ManageOrders.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-container\">\r\n    <div class=\"order-list\" v-if=\"!toggleCard\">\r\n      <h1>Commandes</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Numéro de commande</th>\r\n            <th>Date de la commande</th>\r\n            <th>Identité de l'acheteur</th>\r\n            <th>Total commande TTC</th>\r\n            <th>État de la commande</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(data, index) in ordersList\" :key=\"index\">\r\n            <td>{{ data.orderNumber }}</td>\r\n            <td>{{ data.date }}</td>\r\n            <td>{{ data.entreprise }}</td>\r\n            <td>{{ (data.coutTotal * 1.2).toFixed(2) }} €</td>\r\n            <td\r\n              class=\"status-pending\"\r\n              :class=\"\r\n                data.delivered === false ? 'status-pending' : 'status-delivered'\r\n              \"\r\n              v-html=\"\r\n                data.delivered === false\r\n                  ? 'Livraison en cours'\r\n                  : 'Commande livrée'\r\n              \"\r\n            ></td>\r\n            <td>\r\n              <button\r\n                @click=\"\r\n                  showDetail(data.orderNumber);\r\n                  console.log(data.orderNumber);\r\n                \"\r\n              >\r\n                Voir Détails\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <div class=\"order-card\" v-if=\"toggleCard\">\r\n      <button class=\"close-card\" @click=\"toggleCard = !toggleCard\">X</button>\r\n      <h2>\r\n        Commande N° {{ this.currentOrder.orderNumber }} du\r\n        {{ this.currentOrder.date }}\r\n      </h2>\r\n      <div class=\"client\">\r\n        <div class=\"entreprise\">\r\n          <p class=\"bold\">Commanditaire :</p>\r\n          <p>{{ this.currentOrder.entreprise }}</p>\r\n        </div>\r\n\r\n        <div class=\"adresse\">\r\n          <p class=\"bold\">Adresse :</p>\r\n          <p>{{ this.currentOrder.adresse }}</p>\r\n          <p>{{ this.currentOrder.codePostal }}</p>\r\n          <p>{{ this.currentOrder.ville }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <h2>Articles :</h2>\r\n      <div class=\"order-recap\">\r\n        <div class=\"products\">\r\n          <p\r\n            v-for=\"produits in this.currentOrder.titreProduits\"\r\n            :key=\"produits\"\r\n          >\r\n            {{ produits }}\r\n          </p>\r\n        </div>\r\n        <div class=\"unit-price\">\r\n          <p v-for=\"prix in this.currentOrder.prixUnitaire\" :key=\"prix\">\r\n            {{ prix }} €\r\n          </p>\r\n        </div>\r\n        <div class=\"quantities\">\r\n          <p v-for=\"quantité in this.currentOrder.quantité\" :key=\"quantité\">\r\n            x {{ quantité }}\r\n          </p>\r\n        </div>\r\n        <div class=\"prices\">\r\n          <p v-for=\"prix in this.currentOrder.prixArticles\" :key=\"prix\">\r\n            Total HT : {{ prix.toFixed(2) }} €\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"bold\">\r\n        <p>\r\n          Total commande HT : {{ this.currentOrder.coutTotal.toFixed(2) }} €\r\n        </p>\r\n        <p>\r\n          Total commande TTC :\r\n          {{ (this.currentOrder.coutTotal * 1.2).toFixed(2) }} €\r\n        </p>\r\n      </div>\r\n\r\n      <div class=\"status-container\">\r\n        <p>État de la commande :</p>\r\n        <p\r\n          class=\"status-pending\"\r\n          :class=\"\r\n            this.currentOrder.delivered === false\r\n              ? 'status-pending'\r\n              : 'status-delivered'\r\n          \"\r\n          v-html=\"\r\n            this.currentOrder.delivered === false\r\n              ? 'Livraison en cours'\r\n              : 'Commande livrée'\r\n          \"\r\n        ></p>\r\n      </div>\r\n      <button\r\n        class=\"delivery-btn\"\r\n        v-if=\"this.currentOrder.delivered === false\"\r\n        @click=\"confirmDelivery()\"\r\n      >\r\n        Confirmer la livraison\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      currentOrder: {\r\n        orderNumber: 0,\r\n        date: \"\",\r\n        titreProduits: [],\r\n        prixUnitaire: [],\r\n        prixArticles: [],\r\n        quantité: [],\r\n        coutTotal: 0,\r\n        entreprise: \"\",\r\n        adresse: \"\",\r\n        codePostal: \"\",\r\n        ville: \"\",\r\n        delivered: false,\r\n      },\r\n      toggleCard: false,\r\n      ordersList: [],\r\n      groupe: \"GUEST\",\r\n      identite: \"guest\",\r\n    };\r\n  },\r\n  methods: {\r\n    reverseOrders() {\r\n      // Create a copy of the array using spread syntax\r\n      const reversedOrders = [...this.listOfOrders];\r\n      // Reverse the copied array\r\n      this.ordersList = reversedOrders.reverse();\r\n    },\r\n    confirmDelivery() {\r\n      if (confirm(\"Êtes-vous sûr de vouloir valider cette commande ?\")) {\r\n        this.currentOrder.delivered = true;\r\n        localStorage.setItem(\"orders\", JSON.stringify(this.listOfOrders));\r\n      }\r\n    },\r\n    showDetail(orderId) {\r\n      this.toggleCard = !this.toggleCard;\r\n      for (let order of this.listOfOrders) {\r\n        if (order.orderNumber === orderId) {\r\n          this.currentOrder = order;\r\n        }\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapState([\"listOfOrders\"]),\r\n  },\r\n  created() {\r\n    let orders = localStorage.getItem(\"orders\");\r\n    if (orders) {\r\n      this.$store.commit(\"SET_ORDERS\");\r\n    }\r\n    this.reverseOrders();\r\n\r\n    let identity = localStorage.getItem(\"myIdentity\");\r\n    if (identity) {\r\n      this.identite = JSON.parse(\r\n        localStorage.getItem(\"myIdentity\")\r\n      ).raisonSociale;\r\n      this.$store.commit(\"CHANGE_IDENTITY\", this.identite);\r\n\r\n      this.groupe = JSON.parse(localStorage.getItem(\"myIdentity\")).role;\r\n      this.$store.commit(\"CHANGE_GROUP\", this.groupe);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.order-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n\r\n  .order-list {\r\n    border: 1px solid rgb(231, 67, 39);\r\n    padding: 10px 40px 30px 20px;\r\n\r\n    table {\r\n      // border-collapse: collapse;\r\n\r\n      thead {\r\n        th {\r\n          padding: 10px;\r\n          border-bottom: 1px solid lightgrey;\r\n        }\r\n      }\r\n\r\n      tbody {\r\n        .status-pending {\r\n          color: rgb(231, 67, 39);\r\n        }\r\n        .status-delivered {\r\n          color: #4caf50;\r\n        }\r\n        tr {\r\n          td {\r\n            padding: 10px;\r\n            border-bottom: 1px solid lightgrey;\r\n            button {\r\n              border: 1px solid rgb(94, 25, 111);\r\n              color: rgb(94, 25, 111);\r\n              border-radius: 5px;\r\n              padding: 10px 25px;\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      tbody tr:nth-child(even) {\r\n        background-color: #f2f2f2;\r\n      }\r\n\r\n      tbody tr:nth-child(odd) {\r\n        background-color: #ffffff;\r\n      }\r\n    }\r\n  }\r\n\r\n  .order-card {\r\n    position: relative;\r\n    padding: 10px 0 30px 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 50%;\r\n    border: 1px solid rgb(231, 67, 39);\r\n    margin-bottom: 50px;\r\n    gap: 50px;\r\n\r\n    .close-card {\r\n      font-size: 1em;\r\n      background: none;\r\n      border: none;\r\n      width: fit-content;\r\n      cursor: pointer;\r\n      position: relative;\r\n      top: 0;\r\n      left: 95%;\r\n    }\r\n\r\n    .client {\r\n      display: flex;\r\n      justify-content: center;\r\n      gap: 50px;\r\n\r\n      .entreprise {\r\n        display: flex;\r\n        flex-direction: column;\r\n      }\r\n\r\n      .adresse {\r\n        display: flex;\r\n        flex-direction: column;\r\n      }\r\n    }\r\n\r\n    .bold {\r\n      font-weight: bold;\r\n    }\r\n\r\n    .order-recap {\r\n      display: flex;\r\n      justify-content: center;\r\n      gap: 25px;\r\n    }\r\n\r\n    .status-pending {\r\n      color: rgb(231, 67, 39);\r\n    }\r\n    .status-delivered {\r\n      color: #4caf50;\r\n    }\r\n\r\n    .delivery-btn {\r\n      border: none;\r\n      align-self: center;\r\n      color: #4caf50;\r\n      border: 1px solid #4caf50;\r\n      border-radius: 5px;\r\n      width: 30%;\r\n      cursor: pointer;\r\n      padding: 10px 25px;\r\n    }\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 1024px) {\r\n  .order-container {\r\n    justify-content: none;\r\n    .order-card {\r\n      width: 66%;\r\n    }\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 600px) {\r\n  .order-container {\r\n    justify-content: none;\r\n    .order-card {\r\n      width: 100%;\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":"AAmIA,SAASA,QAAO,QAAS,MAAM;AAC/B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;QACZC,WAAW,EAAE,CAAC;QACdC,IAAI,EAAE,EAAE;QACRC,aAAa,EAAE,EAAE;QACjBC,YAAY,EAAE,EAAE;QAChBC,YAAY,EAAE,EAAE;QAChBC,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE,CAAC;QACZC,UAAU,EAAE,EAAE;QACdC,OAAO,EAAE,EAAE;QACXC,UAAU,EAAE,EAAE;QACdC,KAAK,EAAE,EAAE;QACTC,SAAS,EAAE;MACb,CAAC;MACDC,UAAU,EAAE,KAAK;MACjBC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE,OAAO;MACfC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd;MACA,MAAMC,cAAa,GAAI,CAAC,GAAG,IAAI,CAACC,YAAY,CAAC;MAC7C;MACA,IAAI,CAACN,UAAS,GAAIK,cAAc,CAACE,OAAO,CAAC,CAAC;IAC5C,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,IAAIC,OAAO,CAAC,mDAAmD,CAAC,EAAE;QAChE,IAAI,CAACvB,YAAY,CAACY,SAAQ,GAAI,IAAI;QAClCY,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACP,YAAY,CAAC,CAAC;MACnE;IACF,CAAC;IACDQ,UAAUA,CAACC,OAAO,EAAE;MAClB,IAAI,CAAChB,UAAS,GAAI,CAAC,IAAI,CAACA,UAAU;MAClC,KAAK,IAAIiB,KAAI,IAAK,IAAI,CAACV,YAAY,EAAE;QACnC,IAAIU,KAAK,CAAC7B,WAAU,KAAM4B,OAAO,EAAE;UACjC,IAAI,CAAC7B,YAAW,GAAI8B,KAAK;QAC3B;MACF;IACF;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGjC,QAAQ,CAAC,CAAC,cAAc,CAAC;EAC9B,CAAC;EACDkC,OAAOA,CAAA,EAAG;IACR,IAAIC,MAAK,GAAIT,YAAY,CAACU,OAAO,CAAC,QAAQ,CAAC;IAC3C,IAAID,MAAM,EAAE;MACV,IAAI,CAACE,MAAM,CAACC,MAAM,CAAC,YAAY,CAAC;IAClC;IACA,IAAI,CAAClB,aAAa,CAAC,CAAC;IAEpB,IAAImB,QAAO,GAAIb,YAAY,CAACU,OAAO,CAAC,YAAY,CAAC;IACjD,IAAIG,QAAQ,EAAE;MACZ,IAAI,CAACrB,QAAO,GAAIU,IAAI,CAACY,KAAK,CACxBd,YAAY,CAACU,OAAO,CAAC,YAAY,CACnC,CAAC,CAACK,aAAa;MACf,IAAI,CAACJ,MAAM,CAACC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAACpB,QAAQ,CAAC;MAEpD,IAAI,CAACD,MAAK,GAAIW,IAAI,CAACY,KAAK,CAACd,YAAY,CAACU,OAAO,CAAC,YAAY,CAAC,CAAC,CAACM,IAAI;MACjE,IAAI,CAACL,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,IAAI,CAACrB,MAAM,CAAC;IACjD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}